{"version":3,"file":"static/js/779.c3215f5c.chunk.js","mappings":"6SAEaA,EAAyB,mCAAG,WAAMC,GAAN,wFACjBC,EAAAA,EAAAA,IAAM,sCAAD,OACaD,EADb,6DADY,cACjCE,EADiC,yBAIhCA,EAAQC,MAJwB,2CAAH,sDAOzBC,EAAwB,mCAAG,WAAMJ,GAAN,wFAChBC,EAAAA,EAAAA,IAAM,sCAAD,OACaD,EADb,qEADW,cAChCE,EADgC,yBAK/BA,EAAQC,KAAKE,MALkB,2CAAH,sDAQxBC,EAA0B,mCAAG,WAAMN,GAAN,wFAClBC,EAAAA,EAAAA,IAAM,sCAAD,OACaD,EADb,4EADa,cAClCE,EADkC,yBAKjCA,EAAQC,KAAKI,SALoB,2CAAH,sDAQ1BC,EAAgB,mCAAG,qGACRP,EAAAA,EAAAA,IACpB,0FAF4B,cACxBC,EADwB,yBAKvBA,EAAQC,KAAKI,SALU,2CAAH,qDAQhBE,EAAsB,mCAAE,WAAOC,GAAP,wFACbT,EAAAA,EAAAA,IAAM,qGAAD,OAC4ES,EAD5E,gCADQ,cAC7BR,EAD6B,yBAK5BA,EAAQC,KAAKI,SALe,2CAAF,qD,uIC/BtBI,EAAiBC,EAAAA,GAAAA,QAAH,0CAIdC,EAAcD,EAAAA,GAAAA,GAAH,6EAMXE,EAAcF,EAAAA,GAAAA,GAAH,iHASXG,EAAeH,EAAAA,GAAAA,GAAH,mKASZI,EAAcJ,EAAAA,GAAAA,EAAH,yF,SCWxB,EA9BgB,WACd,OAA8BK,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KACQnB,GAAOoB,EAAAA,EAAAA,MAAPpB,GAUR,OARAqB,EAAAA,EAAAA,YAAU,WACR,KACEf,EAAAA,EAAAA,IAA2BN,GAAIsB,MAAK,SAAAC,GAAG,OAAIJ,EAAWI,EAAf,GAGxC,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACxB,KAGF,SAACW,EAAD,WACE,SAACE,EAAD,UACGK,EAAQS,OAAS,EAChBT,EAAQU,KAAI,SAAAC,GAAM,OAChB,UAACf,EAAD,YACE,UAACC,EAAD,sBAAuBc,EAAOC,WAC9B,SAACd,EAAD,UAAca,EAAOE,YAFLF,EAAO7B,GADT,KAOlB,SAACgB,EAAD,0DAKT,C","sources":["ServiceAPI.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const FetchMovieInformationById = async id => {\n  const respons = await axios(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=bb9be7856d820d280efdc8865f07d5b2&language=en-US`\n  );\n  return respons.data;\n};\n\nexport const FetchCastInformationById = async id => {\n  const respons = await axios(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=bb9be7856d820d280efdc8865f07d5b2&language=en-US`\n  );\n\n  return respons.data.cast;\n};\n\nexport const FetchReviewInformationById = async id => {\n  const respons = await axios(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=bb9be7856d820d280efdc8865f07d5b2&language=en-US&page=1`\n  );\n\n  return respons.data.results;\n};\n\nexport const fetchTrendMovies = async () => {\n  const respons = await axios(\n    'https://api.themoviedb.org/3/trending/all/day?api_key=bb9be7856d820d280efdc8865f07d5b2'\n  );\n\n  return respons.data.results;\n};\n\nexport const fetchSearchQueryMovies= async (searchParams) => {\n  const respons = await axios(\n    `https://api.themoviedb.org/3/search/movie?api_key=bb9be7856d820d280efdc8865f07d5b2&language=en-US&${searchParams}&page=1&include_adult=false`\n  );\n\n  return respons.data.results;\n};","import styled from 'styled-components';\n\nexport const ReviewsSection = styled.section`\n  padding: 10px;\n`;\n\nexport const ReviewsList = styled.ul`\n  padding: 10px;\n  margin: 0;\n  list-style: none;\n`;\n\nexport const ReviewsItem = styled.li`\n  margin-bottom: 10px;\n  padding: 5px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const ReviewsTitle = styled.h2`\n  margin: 0 0 10px 0;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.15;\n  text-transform: uppercase;\n`;\n\nexport const ReviewsText = styled.p`\n  font-style: normal;\n  font-size: 17px;\n  line-height: 1.33;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { FetchReviewInformationById } from 'ServiceAPI';\nimport {\n  ReviewsSection,\n  ReviewsList,\n  ReviewsItem,\n  ReviewsTitle,\n  ReviewsText,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState({});\n  const { id } = useParams();\n\n  useEffect(() => {\n    try {\n      FetchReviewInformationById(id).then(res => setReviews(res));\n    } catch (error) {\n      console.log(error);\n    }\n  }, [id]);\n\n  return (\n    <ReviewsSection>\n      <ReviewsList>\n        {reviews.length > 0 ? (\n          reviews.map(review => (\n            <ReviewsItem key={review.id}>\n              <ReviewsTitle>Author: {review.author}</ReviewsTitle>\n              <ReviewsText>{review.content}</ReviewsText>\n            </ReviewsItem>\n          ))\n        ) : (\n          <ReviewsText>We don't have any reviews for this movie</ReviewsText>\n        )}\n      </ReviewsList>\n    </ReviewsSection>\n  );\n};\n\nexport default Reviews;\n"],"names":["FetchMovieInformationById","id","axios","respons","data","FetchCastInformationById","cast","FetchReviewInformationById","results","fetchTrendMovies","fetchSearchQueryMovies","searchParams","ReviewsSection","styled","ReviewsList","ReviewsItem","ReviewsTitle","ReviewsText","useState","reviews","setReviews","useParams","useEffect","then","res","error","console","log","length","map","review","author","content"],"sourceRoot":""}